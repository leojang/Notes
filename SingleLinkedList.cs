public class Node    {        public Node next;        public int value;    }
using System;using System.Collections.Generic;using System.Linq;using System.Text;using System.Threading.Tasks;namespace LinkedList{    public class SingleLinkedList    {        public Node head;        public SingleLinkedList(Node head)        {            this.head = head;                    }        public void AddNodeToHead(Node target)        {                        target.next = head;            head = target;        }        public void AddNodeToTail(Node target)        {            Node temp = head;            while (temp.next != null)                temp = temp.next;            temp.next = target;        }        public void AddNodeAfterKth(Node target, int index)        {            Node temp = head;            Node previous = null;            while (--index >= 0 && temp != null)             {                               previous = temp;                temp = temp.next;            }            previous.next = target;            target.next = temp;        }        public void AddNodeBeforeKth(Node node, int index)        {            Node current = head;            Node previous = null;            while (--index > 0 && current != null)            {                previous = current;                current = current.next;            }            node.next = current;            if (previous == null)                head = node;            else                previous.next = node;        }        public void RemoveKthNode(int index)        {            Node current = head;            Node previous = null;            while (--index > 0 && current != null)            {                previous = current;                current = current.next;            }            if(previous == null)                head = current.next;            else                                          previous.next = current.next;        }        public void RemoveHead()        {        }        public void RemoveTail()        {        }                public void Traverse()        {            Node temp = head;            while(temp != null)            {                Console.Write(temp.value + " ");                temp = temp.next;            }        }    }}using System;using System.Collections.Generic;using System.Linq;using System.Text;using System.Threading.Tasks;namespace LinkedList{    class Program    {        static void Main(string[] args)        {            Node head = new Node{ next = null, value = 1 };            SingleLinkedList list = new SingleLinkedList(head);            list.AddNodeToHead(new Node { next = null, value = 2 });            list.AddNodeToHead(new Node { next = null, value = 3 });            list.AddNodeToHead(new Node { next = null, value = 4 });            list.AddNodeToHead(new Node { next = null, value = 5 });            list.RemoveKthNode(5);            list.Traverse();            Console.WriteLine();            Console.ReadLine();        }            }}
